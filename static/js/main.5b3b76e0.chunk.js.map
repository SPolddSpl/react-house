{"version":3,"sources":["services/house-service.ts","components/AddHouse/index.tsx","components/AuthComp/index.tsx","components/Navbar/index.tsx","components/Header/index.tsx","services/map-service.ts","components/MapModal/index.tsx","components/Main/HouseCard/index.tsx","components/Main/index.tsx","components/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HouseService","basePath","this","a","axios","get","data","houseList","house","post","result","Schema","Types","StringType","NumberType","AddHouse","useState","formVal","setFormVal","model","Model","title","isRequired","price","country","city","description","service","addHouse","res","console","log","Form","formValue","onChange","e","onSubmit","submitForm","FormGroup","ControlLabel","FormControl","name","type","ButtonToolbar","Button","appearance","FormComp","props","layout","Whisper","trigger","placement","speaker","Tooltip","setValue","AuthComp","show","setShow","userName","setUserName","pass","setPass","history","useHistory","close","push","useEffect","localStorage","setItem","Modal","onHide","Header","Title","Body","val","inputName","Footer","onClick","user","Alert","success","error","NavbarComp","useRouteMatch","path","url","getItem","logged","Navbar","Nav","activeKey","active","onSelect","Item","eventKey","icon","Icon","componentClass","Link","to","pullRight","HeaderComp","setActive","MapService","lng","ltd","MapModal","img","setImg","getLocation","id","style","width","height","display","justifyContent","src","alt","HouseCard","showOnMap","setShowOnMap","date","Date","createdAt","Panel","shaded","bordered","bodyFill","className","houseId","preventDefault","toLocaleString","alert","Main","houseService","setHouseList","getHouses","then","map","item","Home","Container","Content","FlexboxGrid","justify","align","component","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b3b76e0.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport House from \"../interfaces/house\";\r\n\r\nexport default class HouseService {\r\n  basePath: string;\r\n  constructor() {\r\n    this.basePath = `https://604629dcf0c6dc00177b16e1.mockapi.io`;\r\n  }\r\n  async getHouses() {\r\n    const houseList = await (await axios.get(`${this.basePath}/home`)).data;\r\n    return houseList;\r\n  }\r\n\r\n  async addHouse(house: any) {\r\n    const result = await (await axios.post(`${this.basePath}/home`, house)).data;\r\n    return result;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  FormControl,\r\n  ButtonToolbar,\r\n  Button,\r\n  Schema,\r\n  Alert,\r\n} from \"rsuite\";\r\nimport House from \"../../interfaces/house\";\r\nimport HouseService from \"../../services/house-service\";\r\nconst { StringType, NumberType } = Schema.Types;\r\n\r\nfunction AddHouse() {\r\n  const [formVal, setFormVal] = useState({});\r\n  const model = Schema.Model({\r\n    title: StringType().isRequired(\"This field is required\"),\r\n    price: NumberType().isRequired(\"This field is required\"),\r\n    country: StringType().isRequired(\"This field is required\"),\r\n    city: StringType().isRequired(\"This field is required\"),\r\n    description: StringType().isRequired(\"This field is required\"),\r\n  });\r\n  async function submitForm() {\r\n    let service = new HouseService();\r\n    const res = await service.addHouse(formVal);\r\n    console.log(res)\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      model={model}\r\n      formValue={formVal}\r\n      onChange={(e) => {\r\n        setFormVal(e);\r\n      }}\r\n      onSubmit={(e) => {\r\n        submitForm();\r\n      }}>\r\n      <FormGroup>\r\n        <ControlLabel>Title</ControlLabel>\r\n        <FormControl name=\"title\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <ControlLabel>Price</ControlLabel>\r\n        <FormControl name=\"price\" type=\"number\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <ControlLabel>Country</ControlLabel>\r\n        <FormControl name=\"country\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <ControlLabel>City</ControlLabel>\r\n        <FormControl name=\"city\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <ControlLabel>Description</ControlLabel>\r\n        <FormControl name=\"description\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <ButtonToolbar>\r\n          <Button type=\"submit\" appearance=\"primary\">\r\n            Submit\r\n          </Button>\r\n          <Button appearance=\"default\">Cancel</Button>\r\n        </ButtonToolbar>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AddHouse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  ButtonToolbar,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  HelpBlock,\r\n  Form,\r\n  Alert,\r\n  Tooltip,\r\n  Whisper,\r\n} from \"rsuite\";\r\n\r\nfunction AuthComp() {\r\n  const [show, setShow] = useState(true);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"logged\", \"false\");\r\n  }, []);\r\n\r\n  function close() {\r\n    history.push(\"/home\");\r\n    setShow(false);\r\n  }\r\n\r\n  function setValue(val: string, inputName: string) {\r\n    if (inputName === \"name\") {\r\n      setUserName(val);\r\n    } else {\r\n      setPass(val);\r\n    }\r\n  }\r\n\r\n  function submit(user: any) {\r\n    const sampleUser = {\r\n      name: \"admin\",\r\n      pass: \"admin\",\r\n    };\r\n\r\n    if (userName === sampleUser.name && pass === sampleUser.pass) {\r\n      Alert.success(\"Logged In\");\r\n      localStorage.setItem(\"logged\", \"true\");\r\n      close();\r\n    } else {\r\n      Alert.error(\"Username or Pass is invalid\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={close}>\r\n      <Modal.Header>\r\n        <Modal.Title>Modal Title</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <FormComp setValue={setValue} />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={submit} appearance=\"primary\">\r\n          Login\r\n        </Button>\r\n        <Button onClick={close} appearance=\"subtle\">\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction FormComp(props: any) {\r\n  return (\r\n    <Form layout=\"horizontal\">\r\n      <FormGroup>\r\n        <ControlLabel>Username</ControlLabel>\r\n        <Whisper\r\n          trigger=\"click\"\r\n          placement=\"rightEnd\"\r\n          speaker={\r\n            <Tooltip>\r\n              This is a ToolTip for simple text hints. It can replace the title\r\n              property\r\n            </Tooltip>\r\n          }>\r\n          <Button appearance=\"subtle\">Admin</Button>\r\n        </Whisper>\r\n        <FormControl\r\n          name=\"name\"\r\n          onChange={(e) => {\r\n            props.setValue(e, \"name\");\r\n          }}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <ControlLabel>Password</ControlLabel>\r\n\r\n        <Whisper\r\n          trigger=\"click\"\r\n          placement=\"rightEnd\"\r\n          speaker={\r\n            <Tooltip>\r\n              This is a ToolTip for simple text hints. It can replace the title\r\n              property\r\n            </Tooltip>\r\n          }>\r\n          <Button appearance=\"subtle\">Admin</Button>\r\n        </Whisper>\r\n        <FormControl\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onChange={(e) => {\r\n            props.setValue(e, \"pass\");\r\n          }}\r\n        />\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AuthComp;\r\n","import React, { useState } from \"react\";\r\nimport { useRouteMatch, Link } from \"react-router-dom\";\r\nimport { Nav, Avatar, Icon, Navbar, Dropdown } from \"rsuite\";\r\n\r\nfunction NavbarComp(props: any) {\r\n  const { path, url } = useRouteMatch();\r\n\r\n  const [logged, setLogged] = useState(localStorage.getItem(\"logged\"));\r\n  return (\r\n    <>\r\n      <Navbar>\r\n        <Navbar.Body>\r\n          <Nav {...props} activeKey={props.active} onSelect={props.onSelect}>\r\n            <Nav.Item\r\n              eventKey=\"home\"\r\n              onSelect={props.activeKey}\r\n              icon={<Icon icon=\"home\" />}\r\n              componentClass={Link}\r\n              to={`/home`}>\r\n              Home\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              eventKey=\"search\"\r\n              onSelect={props.activeKey}\r\n              componentClass={Link}\r\n              to={`/map`}>\r\n              Map\r\n            </Nav.Item>\r\n            {logged === \"true\" ? (\r\n              <Nav.Item\r\n                eventKey=\"addHouse\"\r\n                onSelect={props.activeKey}\r\n                componentClass={Link}\r\n                to={`/add`}>\r\n                Add\r\n              </Nav.Item>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Nav>\r\n          <Nav pullRight appearance=\"default\">\r\n            <Nav.Item\r\n              componentClass={Link}\r\n              to={\"/login\"}\r\n              icon={\r\n                logged === \"true\" ? (\r\n                  <Icon icon=\"lock\" />\r\n                ) : (\r\n                  <Icon icon=\"unlock-alt\" />\r\n                )\r\n              }>\r\n              {logged === \"true\" ? \"Logout\" : \"Login\"}\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Body>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavbarComp;\r\n\r\n/**\r\n *\r\n */\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { Header } from \"rsuite\";\r\nimport NavbarComp from \"../Navbar\";\r\n\r\nfunction HeaderComp() {\r\n  const [active, setActive] = useState(\"/\");\r\n\r\n  function handleSelect(activeKey: string) {\r\n    setActive(activeKey);\r\n  }\r\n\r\n  return (\r\n    <NavbarComp appearance=\"subtle\" active={active} onSelect={handleSelect} />\r\n  );\r\n}\r\n\r\nexport default HeaderComp;\r\n","import axios from \"axios\";\r\n\r\nexport default class MapService {\r\n  getLocation(lng: string, ltd: string) {\r\n    let locationImg = `https://static.maps.2gis.com/1.0?s=500x500&pt=${lng},${ltd}&z=10`;\r\n    return locationImg;\r\n  }\r\n}\r\n","import { load } from \"@2gis/mapgl\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MapService from \"../../services/map-service\";\r\n\r\nfunction MapModal(props: any) {\r\n  const [img, setImg] = useState<string>();\r\n  useEffect(() => {\r\n    let service = new MapService();\r\n    setImg(service.getLocation(props.lng, props.ltd));\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"map\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n      }}>\r\n      <img src={img} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapModal;\r\n","import React, { useState } from \"react\";\r\nimport { List, FlexboxGrid, Icon, Avatar, Panel, Col, Row, Button, Modal } from \"rsuite\";\r\nimport House from \"../../../interfaces/house\";\r\nimport MapModal from \"../../MapModal\";\r\nimport \"./index.css\";\r\n\r\n\r\n\r\nfunction HouseCard(props: House) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [showOnMap, setShowOnMap] = useState(false);\r\n  let date = new Date(props.createdAt)\r\n  function showMore(houseId: string) {\r\n    console.log(houseId)\r\n    setShow(true);\r\n  }\r\n\r\n\r\n  function close() {\r\n    setShow(false);\r\n  }\r\n\r\n\r\n  function showMap() {\r\n    setShowOnMap(true);\r\n  }\r\n\r\n\r\n  return (\r\n    <Panel shaded bordered bodyFill style={{ display: 'inline-block', width: 240 }}>\r\n      <img src={`https://picsum.photos/id/${props.id}/240/240`} height=\"240\" />\r\n      <Panel>\r\n        <div className=\"panel-body\">\r\n\r\n          <h4>{props.title}</h4>\r\n          <div className=\"button-container\">\r\n\r\n            <p>\r\n              <small>{props.city}</small>\r\n            </p>\r\n\r\n            <Button onClick={(e) => {\r\n              e.preventDefault()\r\n              showMore(props.id)\r\n            }} appearance=\"ghost\">More</Button>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n      <Modal show={show} onHide={(e) => {\r\n        close();\r\n      }}>\r\n        <Modal.Header>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {showOnMap ? <Panel bordered bodyFill>\r\n            <MapModal lng={props.lng} ltd={props.ltd}/>\r\n          </Panel> : <Panel bordered shaded>\r\n            <span>Description: {props.description}</span>\r\n            <p>Added at {date.toLocaleString()}</p>\r\n            <p>Country: {props.country}, City: {props.city}</p>\r\n            <strong>Price: ${props.price} </strong>\r\n          </Panel>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={(e) => {\r\n            close();\r\n            alert('Your request is pending')\r\n          }} appearance=\"primary\">\r\n            Buy\r\n            </Button>\r\n          <Button onClick={(e) => {\r\n            showMap();\r\n          }} appearance=\"default\">\r\n            Show on map\r\n            </Button>\r\n\r\n          <Button onClick={(e) => {\r\n            close();\r\n          }} appearance=\"subtle\">\r\n            Cancel\r\n            </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Panel>\r\n  );\r\n}\r\n\r\nexport default HouseCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, FlexboxGrid, Grid, List, Row } from \"rsuite\";\r\nimport FlexboxGridItem from \"rsuite/lib/FlexboxGrid/FlexboxGridItem\";\r\nimport House from \"../../interfaces/house\";\r\nimport HouseService from \"../../services/house-service\";\r\nimport HouseCard from \"./HouseCard\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction Main() {\r\n  const houseService = new HouseService();\r\n  const [houseList, setHouseList] = useState<House[]>([]);\r\n  \r\n  useEffect(() => {\r\n    houseService.getHouses().then((data: House[]) => {\r\n      setHouseList(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid-list\">\r\n      {houseList.map((item)=> {\r\n        return <HouseCard key={item.id} {...item} />\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Container, Content, FlexboxGrid, Header } from \"rsuite\";\r\nimport FlexboxGridItem from \"rsuite/lib/FlexboxGrid/FlexboxGridItem\";\r\nimport AddHouse from \"../AddHouse\";\r\nimport AuthComp from \"../AuthComp\";\r\nimport HeaderComp from \"../Header\";\r\nimport Main from \"../Main\";\r\nimport MapModal from \"../MapModal\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header>\r\n          <HeaderComp />\r\n        </Header>\r\n        <Content>\r\n          <FlexboxGrid justify=\"center\" align=\"top\">\r\n            <FlexboxGridItem>\r\n              <Switch>\r\n                <Route path={`/home`} component={Main} />\r\n                <Route path={`/map`} component={MapModal} />\r\n                <Route path={`/login`} component={AuthComp} />\r\n                <Route path={`/add`} component={AddHouse} />\r\n                <Route path={`/`} exact />\r\n              </Switch>\r\n            </FlexboxGridItem>\r\n          </FlexboxGrid>\r\n        </Content>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router\";\nimport Home from \"./components/Home\";\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"rsuite/dist/styles/rsuite-dark.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}